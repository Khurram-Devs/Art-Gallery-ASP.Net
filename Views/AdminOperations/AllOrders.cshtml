@model IEnumerable<Order>
@{
    ViewData["Title"] = "AllOrders";
}

<div class="container-fluid">
    <h1 class="text-center enchantedLand">All Orders</h1>




    @if (Model != null && Model.Count() > 0)
    {

        <table class="table table-bordered table-responsive">
            <tr>
                <th>Order Date</th>
                <th>Name</th>
                <th>Email</th>
                <th>Mobile No.</th>
                <th>Address</th>
                <th>Payment Status</th>
                <th>Order Status</th>
                <th>Actions</th>
            </tr>

            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.CreateDate.ToString("dd-MM-yyyy")</td>
                    <td>@order.Name</td>
                    <td>@order.Email</td>
                    <td>@order.MobileNumber</td>
                    <td>@order.Address</td>
                    <td>@order.PaymentMethod | @(order.IsPaid ? "Paid" : "Not Paid")</td>
                    <td>@order.OrderStatus.StatusName</td>
                    <td>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-@order.OrderId">Order Detail</button>
                        <a asp-action="UpdateOrderStatus" asp-route-orderId="@order.OrderId" class="btn btn-info">Change Order Status </a>
                        <a asp-action="TogglePaymentStatus" asp-route-orderId="@order.OrderId" class="btn btn-info">Toggle Payment Status </a>


                        @await Html.PartialAsync("/Views/AdminOperations/_OrderDetailModel.cshtml", new OrderDetailModalDTO
           {
               DivId = order.OrderId.ToString(),
               OrderDetails = order.OrderDetails
           })
                    </td>

                </tr>
            }

        </table>

    }
    else
    {
        <h5>No Orders</h5>
    }

</div>